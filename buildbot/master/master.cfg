# -*- python -*-

c = BuildmasterConfig = {}

BASEURL = 'http://taskcoach.svn.sourceforge.net/svnroot/taskcoach/'

PASSWORD = file('.passwd', 'rb').readlines()[0].strip()

####### BUILDSLAVES

from buildbot.buildslave import BuildSlave

c['slaves'] = [BuildSlave("WinXPSP2", PASSWORD, max_builds=1),
               BuildSlave("Ubuntu", PASSWORD, max_builds=1),
               BuildSlave("MacOS", PASSWORD, max_builds=1)]

c['slavePortnum'] = 9989

####### CHANGESOURCES

# SourceForge does not (yet) provide a buildbot notification
# post-commit hook. There is a feature request for this though
# (https://sourceforge.net/tracker/?func=detail&aid=1633682&group_id=1&atid=350001)

#from buildbot.changes.pb import PBChangeSource
#c['change_source'] = PBChangeSource()

from buildbot.changes.svnpoller import SVNPoller, split_file_branches
c['change_source'] = SVNPoller(BASEURL,
                               pollinterval=1*60, # TMP
                               split_file=split_file_branches)

####### SCHEDULERS

from buildbot.scheduler import Scheduler

c['schedulers'] = []
c['schedulers'].append(Scheduler(name="TrunkWin32", branch=None,
                                 treeStableTimer=0,
                                 builderNames=["win32-trunk"]))
c['schedulers'].append(Scheduler(name="LastReleaseWin32", branch='branches/Release0_71_Branch',
                                 treeStableTimer=0,
                                 builderNames=["win32-rel-0.71"]))
c['schedulers'].append(Scheduler(name="TrunkLinux", branch=None,
                                 treeStableTimer=0,
                                 builderNames=["linux-trunk"]))
c['schedulers'].append(Scheduler(name="LastReleaseLinux", branch='branches/Release0_71_Branch',
                                 treeStableTimer=0,
                                 builderNames=["linux-rel-0.71"]))
c['schedulers'].append(Scheduler(name="TrunkMacOS", branch=None,
                                 treeStableTimer=0,
                                 builderNames=["macos-trunk"]))
c['schedulers'].append(Scheduler(name="LastReleaseMacOS", branch='branches/Release0_71_Branch',
                                 treeStableTimer=0,
                                 builderNames=["macos-rel-0.71"]))


####### BUILDERS

import os, sys
sys.path.insert(0, os.getcwd())
import tcbuild

from buildbot.process import factory
from buildbot.steps.source import SVN
from buildbot.steps.shell import Compile

f1 = factory.BuildFactory()

f1.addStep(SVN(svnurl=BASEURL + 'trunk'))
f1.addStep(tcbuild.Cleanup(workdir='build/taskcoach'))
f1.addStep(tcbuild.UnitTests(workdir='build/taskcoach'))
f1.addStep(tcbuild.IntegrationTests(workdir='build/taskcoach'))
f1.addStep(tcbuild.LanguageTests(workdir='build/taskcoach'))
f1.addStep(tcbuild.BuildEXE(workdir='build/taskcoach'))
f1.addStep(tcbuild.UploadEXE(workdir='build/taskcoach'))

b1 = {'name': "win32-trunk",
      'slavename': "WinXPSP2",
      'builddir': "trunk-win32",
      'factory': f1,
      }

f2 = factory.BuildFactory()

f2.addStep(SVN(baseURL=BASEURL))
f2.addStep(tcbuild.Cleanup())
f2.addStep(tcbuild.UnitTests())
f2.addStep(tcbuild.IntegrationTests())
f2.addStep(tcbuild.LanguageTests())
f2.addStep(tcbuild.BuildEXE())
f1.addStep(tcbuild.UploadEXE(workdir='build/taskcoach'))

b2 = {'name': "win32-rel-0.71",
      'slavename': "WinXPSP2",
      'builddir': "rel-win32",
      'factory': f2,
      }

f3 = factory.BuildFactory()

f3.addStep(SVN(svnurl=BASEURL + 'trunk'))
f3.addStep(tcbuild.Cleanup(workdir='build/taskcoach'))
f3.addStep(tcbuild.UnitTests(workdir='build/taskcoach'))
f3.addStep(tcbuild.IntegrationTests(workdir='build/taskcoach'))
f3.addStep(tcbuild.LanguageTests(workdir='build/taskcoach'))
f3.addStep(tcbuild.BuildDEB(workdir='build/taskcoach'))

b3 = {'name': "linux-trunk",
      'slavename': "Ubuntu",
      'builddir': "trunk-linux",
      'factory': f3,
      }

f4 = factory.BuildFactory()

f4.addStep(SVN(baseURL=BASEURL))
f4.addStep(tcbuild.Cleanup())
f4.addStep(tcbuild.UnitTests())
f4.addStep(tcbuild.IntegrationTests())
f4.addStep(tcbuild.LanguageTests())
f4.addStep(tcbuild.BuildDEB())

b4 = {'name': "linux-rel-0.71",
      'slavename': "Ubuntu",
      'builddir': "rel-linux",
      'factory': f4,
      }

f5 = factory.BuildFactory()

f5.addStep(SVN(svnurl=BASEURL + 'trunk'))
f5.addStep(tcbuild.Cleanup(workdir='build/taskcoach'))
f5.addStep(tcbuild.UnitTests(workdir='build/taskcoach'))
f5.addStep(tcbuild.IntegrationTests(workdir='build/taskcoach'))
f5.addStep(tcbuild.LanguageTests(workdir='build/taskcoach'))
f5.addStep(tcbuild.BuildDMG(workdir='build/taskcoach'))

b5 = {'name': "macos-trunk",
      'slavename': "MacOS",
      'builddir': "trunk-macos",
      'factory': f5,
      }

f6 = factory.BuildFactory()

f6.addStep(SVN(baseURL=BASEURL))
f6.addStep(tcbuild.Cleanup())
f6.addStep(tcbuild.UnitTests())
f6.addStep(tcbuild.IntegrationTests())
f6.addStep(tcbuild.LanguageTests())
f6.addStep(tcbuild.BuildDMG())

b6 = {'name': "macos-rel-0.71",
      'slavename': "MacOS",
      'builddir': "rel-macos",
      'factory': f6,
      }

c['builders'] = [b1, b2, b3, b4, b5, b6]

####### STATUS TARGETS

c['status'] = []

from buildbot.status import html
c['status'].append(html.WebStatus(http_port=8010))

from buildbot.status import mail
c['status'].append(mail.MailNotifier(fromaddr="fraca7@free.fr",
                                     sendToInterestedUsers=True,
                                     mode='all',
                                     relayhost='smtp.free.fr',
                                     lookup='users.sourceforge.net'))

####### PROJECT IDENTITY

c['projectName'] = "TaskCoach"
c['projectURL'] = "http://www.taskcoach.org/"

c['buildbotURL'] = "http://www.fraca7.net:8010/"
